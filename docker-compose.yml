# docker-compose.yml

version: '3.7'

services:

  taxi-server:
    build:
      context: ./server
    command: python manage.py runserver 0.0.0.0:8000
    container_name: taxi-server
    depends_on:
      - taxi-redis
      - taxi-database
    environment:
      - PGDATABASE=taxi 
      - PGUSER=taxi 
      - PGPASSWORD=taxi 
      - PGHOST=taxi-database 
      - REDIS_URL=redis://taxi-redis:6379/0
    ports:
      - 8003:8000
    volumes: # new
    - ./server:/usr/src/app

  taxi-redis:
    container_name: taxi-redis
    image: redis:6-alpine

  taxi-database:
    container_name: taxi-database
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=taxi
      - POSTGRES_PASSWORD=taxi
    expose:
      - 5432
    volumes:
      - taxi-database:/var/lib/postgresql/data

  taxi-client:
    build:
      context: ./client
    command: npm start
    container_name: taxi-client
    depends_on:
      - taxi-server
    ports:
      - 3001:3000
    stdin_open: true
    volumes:  # new
      - ./client:/usr/src/app
    environment:  # new
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_BASE_URL=http://localhost:8003

#Typically, the code in your container only exists as long as the container is running.
#When you stop the Docker container and start it again, everything is recreated from
#scratch from the image. Volumes let you store data outside of the container lifecycle. 
volumes:
  #By adding the taxi-database volume, all of the data we write to 
  #PostgreSQL will persist as the Docker container is started and stopped.
  taxi-database: